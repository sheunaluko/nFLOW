{"id":"core_modules/logger_node.js","dependencies":[{"name":"/Users/oluwa/dev/webrt_state_machine/package.json","includedInParent":true,"mtime":1543982915847},{"name":"./logger.js","loc":{"line":3,"column":25},"parent":"/Users/oluwa/dev/webrt_state_machine/src/core_modules/logger_node.js","resolved":"/Users/oluwa/dev/webrt_state_machine/src/core_modules/logger.js"},{"name":"../module_resources/utils.js","loc":{"line":4,"column":17},"parent":"/Users/oluwa/dev/webrt_state_machine/src/core_modules/logger_node.js","resolved":"/Users/oluwa/dev/webrt_state_machine/src/module_resources/utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _logger = require(\"./logger.js\");\n\nvar _utils = _interopRequireDefault(require(\"../module_resources/utils.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Logs whatever it receives\n *\n * @param {Function} f - The function to use as transform \n */\nvar logger_node =\n/*#__PURE__*/\nfunction () {\n  function logger_node() {\n    _classCallCheck(this, logger_node);\n\n    this.log = (0, _logger.makeLogger)(\"LN\");\n\n    this.default_handler = function (data) {\n      //do nothing  \n      return null;\n    };\n\n    this.data_handler = this.default_handler;\n  }\n  /** \n   * Sets the data_handler attribute\n   * @param {Function} func - Function which accepts ONE raw data object and processes it.\n   */\n\n\n  _createClass(logger_node, [{\n    key: \"set_data_handler\",\n    value: function set_data_handler(func) {\n      this.data_handler = func;\n    }\n    /** \n     * Process a received data object (simply pass it to the data handler) \n     * @param {obj} Data object to receive and transform \n     */\n\n  }, {\n    key: \"process_data\",\n    value: function process_data(obj) {\n      this.data_handler(obj);\n      console.log(obj);\n    }\n  }]);\n\n  return logger_node;\n}();\n\nexports.default = logger_node;","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"core_modules/logger_node.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"core_modules/logger_node.js","original":{"line":4,"column":0}},{"generated":{"line":20,"column":0},"source":"core_modules/logger_node.js","original":{"line":6,"column":0}},{"name":"logger_node","generated":{"line":25,"column":4},"source":"core_modules/logger_node.js","original":{"line":11,"column":21}},{"generated":{"line":28,"column":0},"source":"core_modules/logger_node.js","original":{"line":13,"column":4}},{"generated":{"line":28,"column":25},"source":"core_modules/logger_node.js","original":{"line":13,"column":18}},{"generated":{"line":29,"column":0},"source":"core_modules/logger_node.js","original":{"line":13,"column":18}},{"generated":{"line":31,"column":0},"source":"core_modules/logger_node.js","original":{"line":14,"column":1}},{"name":"log","generated":{"line":31,"column":9},"source":"core_modules/logger_node.js","original":{"line":14,"column":6}},{"generated":{"line":31,"column":12},"source":"core_modules/logger_node.js","original":{"line":14,"column":1}},{"generated":{"line":31,"column":15},"source":"core_modules/logger_node.js","original":{"line":14,"column":12}},{"generated":{"line":31,"column":39},"source":"core_modules/logger_node.js","original":{"line":14,"column":23}},{"generated":{"line":31,"column":43},"source":"core_modules/logger_node.js","original":{"line":14,"column":12}},{"generated":{"line":31,"column":44},"source":"core_modules/logger_node.js","original":{"line":14,"column":1}},{"generated":{"line":33,"column":0},"source":"core_modules/logger_node.js","original":{"line":15,"column":1}},{"name":"default_handler","generated":{"line":33,"column":9},"source":"core_modules/logger_node.js","original":{"line":15,"column":6}},{"generated":{"line":33,"column":24},"source":"core_modules/logger_node.js","original":{"line":15,"column":1}},{"generated":{"line":33,"column":27},"source":"core_modules/logger_node.js","original":{"line":15,"column":24}},{"name":"data","generated":{"line":33,"column":37},"source":"core_modules/logger_node.js","original":{"line":15,"column":33}},{"generated":{"line":33,"column":41},"source":"core_modules/logger_node.js","original":{"line":15,"column":24}},{"generated":{"line":33,"column":43},"source":"core_modules/logger_node.js","original":{"line":15,"column":39}},{"generated":{"line":34,"column":0},"source":"core_modules/logger_node.js","original":{"line":16,"column":5}},{"generated":{"line":35,"column":0},"source":"core_modules/logger_node.js","original":{"line":17,"column":5}},{"generated":{"line":35,"column":13},"source":"core_modules/logger_node.js","original":{"line":17,"column":12}},{"generated":{"line":35,"column":17},"source":"core_modules/logger_node.js","original":{"line":17,"column":5}},{"generated":{"line":36,"column":0},"source":"core_modules/logger_node.js","original":{"line":18,"column":2}},{"generated":{"line":36,"column":5},"source":"core_modules/logger_node.js","original":{"line":15,"column":1}},{"generated":{"line":38,"column":0},"source":"core_modules/logger_node.js","original":{"line":19,"column":1}},{"name":"data_handler","generated":{"line":38,"column":9},"source":"core_modules/logger_node.js","original":{"line":19,"column":6}},{"generated":{"line":38,"column":21},"source":"core_modules/logger_node.js","original":{"line":19,"column":1}},{"generated":{"line":38,"column":24},"source":"core_modules/logger_node.js","original":{"line":19,"column":21}},{"name":"default_handler","generated":{"line":38,"column":29},"source":"core_modules/logger_node.js","original":{"line":19,"column":26}},{"generated":{"line":38,"column":44},"source":"core_modules/logger_node.js","original":{"line":19,"column":1}},{"generated":{"line":39,"column":0},"source":"core_modules/logger_node.js","original":{"line":20,"column":5}},{"generated":{"line":40,"column":0},"source":"core_modules/logger_node.js","original":{"line":22,"column":4}},{"name":"func","generated":{"line":48,"column":37},"source":"core_modules/logger_node.js","original":{"line":26,"column":21}},{"generated":{"line":48,"column":43},"source":"core_modules/logger_node.js","original":{"line":26,"column":27}},{"generated":{"line":49,"column":0},"source":"core_modules/logger_node.js","original":{"line":27,"column":1}},{"name":"data_handler","generated":{"line":49,"column":11},"source":"core_modules/logger_node.js","original":{"line":27,"column":6}},{"generated":{"line":49,"column":23},"source":"core_modules/logger_node.js","original":{"line":27,"column":1}},{"name":"func","generated":{"line":49,"column":26},"source":"core_modules/logger_node.js","original":{"line":27,"column":21}},{"generated":{"line":49,"column":30},"source":"core_modules/logger_node.js","original":{"line":27,"column":1}},{"generated":{"line":50,"column":0},"source":"core_modules/logger_node.js","original":{"line":28,"column":5}},{"generated":{"line":51,"column":0},"source":"core_modules/logger_node.js","original":{"line":31,"column":4}},{"name":"obj","generated":{"line":58,"column":33},"source":"core_modules/logger_node.js","original":{"line":35,"column":17}},{"generated":{"line":58,"column":38},"source":"core_modules/logger_node.js","original":{"line":35,"column":22}},{"generated":{"line":59,"column":0},"source":"core_modules/logger_node.js","original":{"line":36,"column":1}},{"name":"data_handler","generated":{"line":59,"column":11},"source":"core_modules/logger_node.js","original":{"line":36,"column":6}},{"generated":{"line":59,"column":23},"source":"core_modules/logger_node.js","original":{"line":36,"column":1}},{"name":"obj","generated":{"line":59,"column":24},"source":"core_modules/logger_node.js","original":{"line":36,"column":20}},{"generated":{"line":59,"column":27},"source":"core_modules/logger_node.js","original":{"line":36,"column":1}},{"name":"console","generated":{"line":60,"column":0},"source":"core_modules/logger_node.js","original":{"line":37,"column":1}},{"name":"console","generated":{"line":60,"column":6},"source":"core_modules/logger_node.js","original":{"line":37,"column":1}},{"generated":{"line":60,"column":13},"source":"core_modules/logger_node.js","original":{"line":37,"column":8}},{"name":"log","generated":{"line":60,"column":14},"source":"core_modules/logger_node.js","original":{"line":37,"column":9}},{"generated":{"line":60,"column":17},"source":"core_modules/logger_node.js","original":{"line":37,"column":1}},{"name":"obj","generated":{"line":60,"column":18},"source":"core_modules/logger_node.js","original":{"line":37,"column":13}},{"generated":{"line":60,"column":21},"source":"core_modules/logger_node.js","original":{"line":37,"column":1}},{"generated":{"line":61,"column":0},"source":"core_modules/logger_node.js","original":{"line":38,"column":5}}],"sources":{"core_modules/logger_node.js":"// Wed Dec  5 08:11:17 PST 2018\n\nimport {makeLogger} from \"./logger.js\"\nimport util from \"../module_resources/utils.js\"\n\n/**\n * Logs whatever it receives\n *\n * @param {Function} f - The function to use as transform \n */\nexport default class logger_node {\n    \n    constructor() { \n\tthis.log = makeLogger(\"LN\")\n\tthis.default_handler = function(data) { \n\t    //do nothing  \n\t    return null \n\t} \n\tthis.data_handler = this.default_handler \n    } \n\n    /** \n     * Sets the data_handler attribute\n     * @param {Function} func - Function which accepts ONE raw data object and processes it.\n     */ \n    set_data_handler(func) { \n\tthis.data_handler = func \n    }\n\n    \n    /** \n     * Process a received data object (simply pass it to the data handler) \n     * @param {obj} Data object to receive and transform \n     */ \n    process_data(obj) { \n\tthis.data_handler( obj ) \n\tconsole.log(obj)\n    }\n\n    \n}\n\n"},"lineCount":null}},"hash":"f8e0fd2005ab4ddc3660e20d1faffb1c","cacheData":{"env":{}}}