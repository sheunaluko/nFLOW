{"id":"src/core_modules/pipe_manager.js","dependencies":[{"name":"/Users/oluwa/dev/webrt_state_machine/package.json","includedInParent":true,"mtime":1540304235496},{"name":"./logger.js","loc":{"line":3,"column":25},"parent":"/Users/oluwa/dev/webrt_state_machine/src/core_modules/pipe_manager.js","resolved":"/Users/oluwa/dev/webrt_state_machine/src/core_modules/logger.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _logger = require(\"./logger.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Manages the flow of streaming data between various modules of RoseGait\n * e.g. pipe_manager.connect(web_socket, data_storage) \n */\nvar pipe_manager =\n/*#__PURE__*/\nfunction () {\n  function pipe_manager() {\n    _classCallCheck(this, pipe_manager);\n\n    this.log = (0, _logger.makeLogger)(\"PM\");\n  }\n  /**\n   * Connects a streaming output data source to a streaming input source. \n   * @param {Object} from - data source (emits data). Must implement method `set_data_handler` \n   * and have member default_handler\n   * @param {Object} to -   data sink   (consumes data). Must implement method `process_data` \n   */\n\n\n  _createClass(pipe_manager, [{\n    key: \"connect\",\n    value: function connect(from, to) {\n      from.set_data_handler(function (d) {\n        to.process_data(d);\n      }.bind(to));\n    }\n    /**\n     * Disconnects a streaming output data source from a streaming input source. \n     * @param {Object} from - data source (emits data). Must implement method `set_data_handler` \n     * and have member default_handler\n     * @param {Object} to -   data sink   (consumes data). Must implement method `process_data` \n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(from, to) {\n      from.set_data_handler(from.default_handler);\n    }\n  }]);\n\n  return pipe_manager;\n}();\n\nexports.default = pipe_manager;","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":5,"column":0}},{"name":"pipe_manager","generated":{"line":20,"column":4},"source":"src/core_modules/pipe_manager.js","original":{"line":9,"column":21}},{"generated":{"line":23,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":11,"column":4}},{"generated":{"line":23,"column":26},"source":"src/core_modules/pipe_manager.js","original":{"line":11,"column":18}},{"generated":{"line":24,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":11,"column":18}},{"generated":{"line":26,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":1}},{"name":"log","generated":{"line":26,"column":9},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":6}},{"generated":{"line":26,"column":12},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":1}},{"generated":{"line":26,"column":15},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":12}},{"generated":{"line":26,"column":39},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":23}},{"generated":{"line":26,"column":43},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":12}},{"generated":{"line":26,"column":44},"source":"src/core_modules/pipe_manager.js","original":{"line":12,"column":1}},{"generated":{"line":27,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":13,"column":5}},{"generated":{"line":28,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":16,"column":4}},{"name":"from","generated":{"line":38,"column":28},"source":"src/core_modules/pipe_manager.js","original":{"line":22,"column":12}},{"name":"to","generated":{"line":38,"column":34},"source":"src/core_modules/pipe_manager.js","original":{"line":22,"column":18}},{"generated":{"line":38,"column":38},"source":"src/core_modules/pipe_manager.js","original":{"line":22,"column":22}},{"name":"from","generated":{"line":39,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":1}},{"name":"from","generated":{"line":39,"column":6},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":1}},{"generated":{"line":39,"column":10},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":5}},{"name":"set_data_handler","generated":{"line":39,"column":11},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":6}},{"generated":{"line":39,"column":27},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":1}},{"generated":{"line":39,"column":28},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":26}},{"name":"d","generated":{"line":39,"column":38},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":35}},{"generated":{"line":39,"column":39},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":26}},{"generated":{"line":39,"column":41},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":38}},{"name":"to","generated":{"line":40,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":39}},{"name":"to","generated":{"line":40,"column":8},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":39}},{"generated":{"line":40,"column":10},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":41}},{"name":"process_data","generated":{"line":40,"column":11},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":42}},{"generated":{"line":40,"column":23},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":39}},{"name":"d","generated":{"line":40,"column":24},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":55}},{"generated":{"line":40,"column":25},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":39}},{"generated":{"line":41,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":58}},{"generated":{"line":41,"column":7},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":25}},{"name":"bind","generated":{"line":41,"column":8},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":60}},{"generated":{"line":41,"column":12},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":25}},{"name":"to","generated":{"line":41,"column":13},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":65}},{"generated":{"line":41,"column":15},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":25}},{"generated":{"line":41,"column":16},"source":"src/core_modules/pipe_manager.js","original":{"line":23,"column":1}},{"generated":{"line":42,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":24,"column":5}},{"generated":{"line":43,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":26,"column":4}},{"name":"from","generated":{"line":52,"column":31},"source":"src/core_modules/pipe_manager.js","original":{"line":32,"column":15}},{"name":"to","generated":{"line":52,"column":37},"source":"src/core_modules/pipe_manager.js","original":{"line":32,"column":21}},{"generated":{"line":52,"column":41},"source":"src/core_modules/pipe_manager.js","original":{"line":32,"column":25}},{"name":"from","generated":{"line":53,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":1}},{"name":"from","generated":{"line":53,"column":6},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":1}},{"generated":{"line":53,"column":10},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":5}},{"name":"set_data_handler","generated":{"line":53,"column":11},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":6}},{"generated":{"line":53,"column":27},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":1}},{"name":"from","generated":{"line":53,"column":28},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":23}},{"generated":{"line":53,"column":32},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":27}},{"name":"default_handler","generated":{"line":53,"column":33},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":28}},{"generated":{"line":53,"column":48},"source":"src/core_modules/pipe_manager.js","original":{"line":33,"column":1}},{"generated":{"line":54,"column":0},"source":"src/core_modules/pipe_manager.js","original":{"line":34,"column":5}}],"sources":{"src/core_modules/pipe_manager.js":"//Tue Oct  2 10:12:11 PDT 2018\n\nimport {makeLogger} from \"./logger.js\"\n\n/**\n * Manages the flow of streaming data between various modules of RoseGait\n * e.g. pipe_manager.connect(web_socket, data_storage) \n */\nexport default class pipe_manager {\n    \n    constructor() { \n\tthis.log = makeLogger(\"PM\")\n    } \n    \n    \n    /**\n     * Connects a streaming output data source to a streaming input source. \n     * @param {Object} from - data source (emits data). Must implement method `set_data_handler` \n     * and have member default_handler\n     * @param {Object} to -   data sink   (consumes data). Must implement method `process_data` \n     */ \n    connect(from, to) { \n\tfrom.set_data_handler(  (function(d) {to.process_data(d)}).bind(to) ) \n    } \n\n    /**\n     * Disconnects a streaming output data source from a streaming input source. \n     * @param {Object} from - data source (emits data). Must implement method `set_data_handler` \n     * and have member default_handler\n     * @param {Object} to -   data sink   (consumes data). Must implement method `process_data` \n     */ \n    disconnect(from, to) { \n\tfrom.set_data_handler(from.default_handler)\n    } \n\n    \n}\n\n\n\n\n"},"lineCount":null}},"hash":"4000f88bb68d334fe214f39326b76118","cacheData":{"env":{}}}