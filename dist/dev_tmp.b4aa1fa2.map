{"version":3,"sources":["src/dev_tmp.js"],"names":["flow","logger","rg","d","console","log","sme","playback_gui","debug","n","sm","wrtsm","mods","state_machine","buffer_size","gui_mode","debug_mode","add_sensor","id","f","sensors","dev_b","dev_b_field","level","dev_b_gyr_z_diff","bgz_std","add_transitioner","transitioners","positive_descending","hs","pre_to","to","init_gui","ds","data_storage","load_session","pm","pipe_manager","connect","t1","main","add","foo","window","start_stream","dev_a","beep","field","buffer","util","last","field_diff","l","length","is_dev_b","dev","is_dev_a","get_sensor_last_1","get_sensor_last_N","bgzv","N","buff","val","variance","map","e","gyr_z","std","gait_state","STATE","params","pd_thresh","gyr_z_std","pre_to_thresh","gstate","diff","test_turn_on","is_on","test_turn_off"],"mappings":"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","file":"dev_tmp.b4aa1fa2.map","sourceRoot":"..","sourcesContent":["\n\nvar flow = {} \n\n\nvar logger = {} \nlogger.rg = function(d) { \n    console.log(\"[dev]: \" + d ) \n} \n\nlogger.sme = function(d) { \n    console.log(\"[sme]: \" + d ) \n} \n\n\nflow.playback_gui = function(d, debug) {\n    var n = 200 \n    logger.rg(\"Creating state machine with size: \" + n) \n    var sm = new wrtsm.mods.state_machine({buffer_size :n, gui_mode:  true, debug_mode : debug }) \n    \n    logger.rg(\"Adding sensors\") \n    sm.add_sensor({id: \"dev_b\" , f : sme.sensors.dev_b } ) \n    sm.add_sensor({id: \"dev_b_gyr_z\" , f : sme.sensors.dev_b_field(\"gyr_z\") , level :  1 } ) \n    sm.add_sensor({id: \"dev_b_gyr_z_diff\" , f : sme.sensors.dev_b_gyr_z_diff, level :  2 } ) \n    sm.add_sensor({id: \"dev_b_gyr_z_std\" , f : sme.sensors.bgz_std(20) , level :  1 })\n    \n    \n    //sm.add_sensor({id:\"dev_b_gyr_z\" , f:sme.sensors.dev_b.field(\"gyr_z\") , level : 3})\n    //sm.add_sensor({id: \"acc_x_diff\" ,f: sme.sensors.field_diff(\"acc_x\")})\n        \n    //sm.add_sensor({id: \"b_ay\" ,f: sme.sensors.dev_b_field(\"acc_y\"), level : 1})\n    //sm.add_sensor({id: \"b_ax\" ,f: sme.sensors.dev_b_field(\"acc_x\"), level : 1})\n    //sm.add_sensor({id: \"b_az\" ,f: sme.sensors.dev_b_field(\"acc_z\"), level : 1})\n\n\n    logger.rg(\"Adding transitioners\") \n    /*\n    sm.add_transitioner(\"test_turn_on\", sme.transitioners.test_turn_on )\n    sm.add_transitioner(\"test_turn_off\", sme.transitioners.test_turn_off )\n    */ \n    sm.add_transitioner(\"pd\", sme.transitioners.positive_descending )\n    sm.add_transitioner(\"hs\", sme.transitioners.hs)\n    sm.add_transitioner(\"pre_to\", sme.transitioners.pre_to )\n    sm.add_transitioner(\"to\", sme.transitioners.to )\n\n    // ok so at this point state machine should be initialized \n    logger.rg(\"Calling sm.init_gui\") \n    sm.init_gui(\"wrtsm\", d) \n    \n    //will load the file from storage \n    var ds = new wrtsm.mods.data_storage(\"eugene_walk_rev\") \n    ds.load_session() \n    \n    \n    \n    //and then create a pipe manager to connect the stored data file to the state machine \n    var pm = new wrtsm.mods.pipe_manager() \n    pm.connect(ds,sm) \n    \n    //return them and can call ds.start_stream() for continuous simulation \n    //OR ds.stream_single_packet() to step one sample\n    return [ds, pm, sm ] \n\n} \n\n\n\n\n\nflow.t1 = function() { \n    //var d = { misc : [ \"dev_b_gyr_z\" , \"dev_b_gyr_z_diff\"  ] } \n    var d = { main : [\"dev_b_gyr_z\" ], add : [ \"dev_b_gyr_z_diff\"], foo :[ \"dev_b_gyr_z_std\" ] }\n    //var d = { main : [\"dev_b_gyr_z\" , \"b_ax\", \"b_ay\", \"b_az\" ] }\n    //var d = { main : [\"dev_b_gyr_z\" , \"b_ay\" ]} \n    //var d = { main : [ \"dev_b_gyr_z_diff\" ] } // \"bgzv10\" ] }\n    window.d = flow.playback_gui(d,false)\n    window.d[0].start_stream(1)\n    window.ds = window.d[0]\n    window.sm = window.d[2]\n}\n\n\n\n\n\n\n\nvar sme = { sensors : { dev_a : {} , dev_b : {} } , \n\t    transitioners : {} }  \n\n\nvar beep = wrtsm.beep \n\n\n\n\n\n\n// THE FILTERS HAVE ACCESS TO THE ENTIRE STATE MACHINE OBJECT !!!!\n\n//extract a specific field from the data objects \n//i.e. [{:acc_x :acc_y... } , ... ] => [ acc_x, acc_x ... ] \nsme.sensors.field = function(field) { \n    return function(d) { \n\tvar buffer = d.buffer \n\treturn util.last(buffer)[field] \n    }\n} \n\n//field diff will take the  diff of a particular field in the data object \nsme.sensors.field_diff = function(field) { \n    return function(d) { \n\td = d.buffer \n\tvar l = d.length \n\treturn d[l-1][field] - d[l-2][field]\n    }\n} \n\n    \n\nsme.is_dev_b = function (d) { \n    return d.dev == \"B\" \n} \n\nsme.is_dev_a = function (d) { \n    return d.dev == \"A\" \n} \n\nsme.sensors.dev_b = function(sm) { \n    let d = util.last(sm.buffer)\n    if (sme.is_dev_b(d)) { \n\treturn d\n    } else { \n\treturn false \n    } \n}\n    \n\nsme.sensors.dev_b_field = function(field) { \n    return function(sm) { \n\tlet d = sm.get_sensor_last_1(\"dev_b\")\n\tif (d) { \n\t    return d[field]\n\t} else { \n\t    return false \n\t} \n    } \n    \n} \n\nsme.sensors.dev_b_gyr_z_diff = function(sm) { \n    let d = sm.get_sensor_last_N(\"dev_b_gyr_z\" , 2)\n    if (d) { \n\treturn d[1] - d[0] \n    } else \n\treturn false \n}\n\nsme.sensors.bgzv = function(N) { \n    return function(sm) { \n\tlet buff = sm.get_sensor_last_N(\"dev_b\", N) \n\tif (buff ) { \n\t    let val  = util.variance(buff.map(e=>e.gyr_z))/ 30\n\t    return val \n\t} else { \n\t    return false \n\t} \n    } \n} \n\nsme.sensors.bgz_std = function(N) { \n    return function(sm) { \n\tlet buff = sm.get_sensor_last_N(\"dev_b\", N) \n\tif (buff ) { \n\t    let val  = util.std(buff.map(e=>e.gyr_z))\n\t    return val \n\t} else { \n\t    return false \n\t} \n    } \n} \n// sme.sensors.dev_b_old.field = function(field) { \n//     //return sme.generic_filter(sme.is_dev_b , d=>d[field] ) \n//     return function(d) {\n// \tvar buf = d.buffer \n// \tvar d = util.last(buf) \n// \tif (d.dev == \"B\") { \n// \t    return d[field]\n// \t} else { \n// \t    util.debug(\"filter miss\")\n// \t    return false }\n//     }\n// }\n\n/// ---------------------------------------- > TRANSITIONERS \n\nfunction gait_state(sm) { \n    return sm.STATE.gait_state \n} \n\nlet params = { \n    gyr_z : { pd_thresh : 190 } , \n    gyr_z_std : { pre_to_thresh : 15 } , \n    \n}\n\n\nsme.transitioners.positive_descending = {\n    \"detector\" : function(sm) { \n\t// gyr_z is > thresh AND gyr_z derivative is negative AND state is not pd\n\tlet gstate = gait_state(sm) \n\tlet gyr_z  = sm.get_sensor_last_1(\"dev_b_gyr_z\")\n\tlet diff   = sm.get_sensor_last_1(\"dev_b_gyr_z_diff\") \n\t\n\tif (gyr_z &&  gstate != 'pd' && gyr_z > params.gyr_z.pd_thresh && diff < 0 ) { \n\t    return true \n\t} else { \n\t    return false \n\t}\n    } , \n    \"applicator\" : function(sm) { \n\tsm.STATE.gait_state = 'pd' \n\t//if (true) { sm.log(\"PD\") ; beep(0) }\n    }, \n    \"group\" : \"gait\" \n}\n\n\nsme.transitioners.hs = {\n    \"detector\" : function(sm) { \n\t// state = pd && diff >= 0 && \n\tlet gstate = gait_state(sm) \n\tlet diff   = sm.get_sensor_last_1(\"dev_b_gyr_z_diff\") \n\t\n\tif ( diff && gstate == 'pd' && diff >= 0 ) { \n\t    return true \n\t} else { \n\t    return false \n\t}\n    } , \n    \"applicator\" : function(sm) { \n\tsm.STATE.gait_state = 'hs' \n\tif (true) { sm.log(\"hs\") ; beep(0) }\n    }, \n    \"group\" : \"gait\" \n}\n\n\nsme.transitioners.pre_to = {\n    \"detector\" : function(sm) { \n\t// state = pd && diff >= 0 && \n\tlet gstate = gait_state(sm) \n\tlet gyr_z_std = sm.get_sensor_last_1(\"dev_b_gyr_z_std\")\n\t\n\tif ( gyr_z_std && gstate == 'hs' && gyr_z_std <= params.gyr_z_std.pre_to_thresh ) { \n\t    return true \n\t} else { \n\t    return false \n\t}\n    } , \n    \"applicator\" : function(sm) { \n\tsm.STATE.gait_state = 'pre_to'\n\t//if (true) { sm.log(\"pre_to\") ; beep(2) }\n    }, \n    \"group\" : \"gait\" \n}\n\n\nsme.transitioners.to = {\n    \"detector\" : function(sm) { \n\t// state = pd && diff >= 0 && \n\tlet gstate = gait_state(sm) \n\tlet diff   = sm.get_sensor_last_1(\"dev_b_gyr_z_diff\") \n\t\n\tif ( diff && gstate == 'pre_to' && diff >= 0 ) { \n\t    return true \n\t} else { \n\t    return false \n\t}\n    } , \n    \"applicator\" : function(sm) { \n\tsm.STATE.gait_state = 'to'\n\tif (true) { sm.log(\"to\") ; beep(3) }\n    }, \n    \"group\" : \"gait\" \n}\n\n\n\n\n\n\n\n// ------------------------------------------------------------------------------------------\n    \n    \n\nsme.transitioners.test_turn_on  = { \n    \"detector\" : function(state_machine) { \n\treturn !state_machine.STATE.is_on \n\t\n    } , \n    \"applicator\" : function(state_machine) { \n\tstate_machine.STATE.is_on = true \n\tif (state_machine.debug_mode ) { logger.sme(\"TURNED ON\") }\n    },\n    \"group\" : \"switch\" \n}\n\n\nsme.transitioners.test_turn_off  = { \n    \"detector\" : function(state_machine) { \n\treturn state_machine.STATE.is_on \n    } , \n    \"applicator\" : function(state_machine) { \n\tstate_machine.STATE.is_on = false  \n\tif (state_machine.debug_mode ) { logger.sme(\"TURNED OFF\") }\n    } , \n    \"group\" : \"switch\" \n}\n\n\n\n\n"]}