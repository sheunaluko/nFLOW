{"version":3,"sources":["src/scripts/dev.js"],"names":["util","wrtsm","tf","mods","transformer","state_machine","pm","pipe_manager","wrtsm_init","t0","now","bin","d","add_time","val","time","sim","simulator","mode","sm","gui_mode","add_sensor","id","f","smu","sensors","field","connect","init_gui","g1","start_stream","rose_gait_test_connection","ws","web_socket","ln","logger_node","rose_gait_init","test_matrix","dict_to_update","dict","get_array_series","o","range","length","map","v","get_dict_series","ret","list","Object","keys","ind","indexOf","splice","array_to_update","arr","ser","zip_map","make_graph_for_obj","opts","container","x_len","graph_ui","ui","series","Array","isArray","console","log","convert","add_graph","series_vector","init","init_time","graph_object","x","updates","handle_sensor_buffer","get_object_grapher","grapher","process_data","t","get_sim_node","node","packet","wrap_sim","s","bind","set_data_handler","dev_0","w","document","getElementById","handler","dev_1","offset","multiplier","ED","event_detector","dev_2","baseline_buffer_size","test_data","y"],"mappings":"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","file":"dev.e0826b01.map","sourceRoot":"..","sourcesContent":["\n\n\n//window.addEventListener(\"wrtsm_ready\" , wrtsm_init) \n\nlet util = wrtsm.util \nlet tf   = wrtsm.mods.transformer \nlet state_machine = wrtsm.mods.state_machine \nlet mods = wrtsm.mods \nlet pm = new mods.pipe_manager() \n\nfunction wrtsm_init() { \n    \n    // - \n    let t0 = util.now() \n\n    //define transformers \n    let bin = new tf( function(d) { if ( d > 0 )  { return 1 } else { return -1 } }) \n    let add_time = new tf (function(d) { return {val : d , time :  util.now() - t0 } })\n    \n    // create objects\n    let sim = new wrtsm.mods.simulator({mode : \"sin\"})\n    let sm  = new wrtsm.mods.state_machine({gui_mode : true } ) \n    let pm  = new wrtsm.mods.pipe_manager() \n\n    //configure the state machine \n    sm.add_sensor({id: \"val\" , f : wrtsm.smu.sensors.field(\"val\") })\n\n    // wire stuff up \n    pm.connect(sim,bin).connect(add_time).connect(sm)\n    \n    // init gui \n    sm.init_gui(\"wrtsm\" , { g1 : [\"val\" ]  } ) \n\n    //start the stream at rate of 20ms\n    sim.start_stream(400)\n} \n\n\n\n// for rosegait init, we have to accomplish a coup of things \n// 1. create a websocket object and connect to the websocket_server (on localhost:1234  by default) \n// 2. Create the desired pipeline for analysis and vizualization of the desired data \n// 3. Wrap the two above things into a function that is run AFTER the following two things \n//  - a) The websocket_server is started via node websocket_server.js \n//  - b) The ios app has connected to websocket_server by entering its url ( IP:1234 ) \n\nfunction rose_gait_test_connection() { \n    \n    //1. create web socket object\n    ws = new mods.web_socket(\"ws://localhost:1234\") \n    \n    //2. create a logger node  \n    ln = new mods.logger_node() \n    \n    //3. connect them with pipe manager \n    pm = new mods.pipe_manager() \n    pm.connect(ws,ln) \n    \n    //4. launch the web socket connection and we should get streaming data provided \n    //that 3a and 3b have been satisfied \n    ws.connect() \n    \n    //5. return objects for manipulation \n    return { ws, ln, pm } \n    \n} \n\nfunction rose_gait_init() { \n    \n    // TODO --> creation of satte machine and definition of relevant parameters, etc.. \n    // also TODO -> modify index.js to make use of menuX ! \n\n    //2. create state machine and define sensors \n    //let sm_buffer = 200 \n    //let sm        = state_machine({buffer_size : sm_buffer , gui_mode: true}) \n   \n}\n\n\nlet test_matrix = [ [1,2,3]  , [2,3,4] , [ 3,4,5 ] ] \n\n\n\n// FOR ARBITRARY GRAPHING -----------------------------------------------                                                   \nfunction dict_to_update(dict) { \n    return dict \n}\n\nfunction get_array_series(o) {\n    //console.log(o)\n    return util.range(0,o.length).map(v=>\"index_\" + v)\n}\n\nfunction get_dict_series(d) { \n    var ret\n    var list = Object.keys(d) \n    //return list   -- allows toggling the removal of time key from object\n    var ind = list.indexOf('time') \n    if (ind >= 0 ) { \n\tlist.splice(ind , 1 ) \n\tret = list \n    } else { ret = list } \n    return ret \n} \n\nfunction array_to_update(arr) { \n    let ser = get_array_series(arr)\n    return util.zip_map(ser, arr)\n}\n\n\nfunction make_graph_for_obj(opts) { \n    var {o, container, x_len} = opts \n    var graph_ui = new mods.ui()\n    var series   = null \n    //console.log(o)\n    if (typeof o == \"object\") { \n\tif (Array.isArray(o)) {\n\t    // its an array\n\t    console.log(\"Making array grapher\")\n\t    series = get_array_series(o) \n\t    graph_ui.convert = array_to_update\n\t} else {\n\t    // assume its a dict\n\t    console.log(\"Making dict grapher\")\n\t    series = get_dict_series(o) \n\t    graph_ui.convert = dict_to_update\n\t}\n    }\n    \n    graph_ui.add_graph({id  :\"main\", series_vector:  series, x_len : 1000})\n    graph_ui.init(container) \n    graph_ui.init_time = util.now()\n    return graph_ui \n}\n\n\nfunction graph_object(x,o,graph_ui) { \n    let updates = graph_ui.convert(o) \n    //console.log(updates)\n    //apply the updates to the graph \n    graph_ui.handle_sensor_buffer((x-graph_ui.init_time)/1000,updates)  // should work???\n}\n\n\nfunction get_object_grapher(opts) { \n    var {container, x_len} = opts \n    var grapher = {}\n    grapher.init = true \n    grapher.graph_ui = null \n    \n    grapher.process_data = function(o) { \n\tif (grapher.init) { \n\t    grapher.graph_ui = make_graph_for_obj({o,container,x_len})\n\t    grapher.init = false \n\t} else { \n\t    var t = util.now()\n\t    //console.log(o)\n\t    graph_object(t,o,grapher.graph_ui)\n\t}\n    }\n    \n    return grapher\n}\n\n\n//PROBLEM  !! when removing time attr from node then NO GREAPH! \n\nfunction get_sim_node(opts) {\n     // - \n    let t0 = util.now() \n    //define a transformer\n    let node = new tf (function(d) { \n\tvar packet =  {val : d , time :  util.now() - t0} \n\t//console.log(packet) \n\treturn packet \n    })\n    \n    // create objects\n    let sim = new wrtsm.mods.simulator(opts) \n    let pm  = new wrtsm.mods.pipe_manager() \n    // wire stuff up \n    pm.connect(sim,node)\n    return {sim, node} \n}\n\nfunction wrap_sim(s) { \n    let pm = new mods.pipe_manager() \n    let t0 = util.now() \n    //define a transformer\n    let t = new tf (function(d) { \n\tvar packet =  {val : d , time :  util.now() - t0} \n\treturn packet \n    })\n    pm.connect(s,t) \n    return { 'start_stream' : (function() { s.start_stream() }).bind(s) , \n\t     'set_data_handler' : (function(f) {t.set_data_handler(f)}).bind(t) } \n}\n\n\n\nfunction dev_0() { \n    var w = document.getElementById(\"wrtsm\") \n    var {sim,node} = get_sim_node({mode : \"rand\"})\n    \n    let grapher = get_object_grapher(w) \n    \n    node.set_data_handler( grapher.handler ) \n    \n    sim.start_stream()\n    return {sim, node, grapher}\n}\n\n\n\nfunction dev_1() { \n    let sim = wrap_sim( new mods.simulator({mode: \"rand\" , offset : 10 , multiplier : 1 }) ) \n    let grapher = get_object_grapher(document.getElementById(\"wrtsm\") )\n    let ln      = new mods.logger_node() \n    let ED      = new mods.event_detector() \n    \n    pm.connect(sim,ED).connect(grapher)\n\n    sim.start_stream() \n    return {sim, grapher, ED}\n}\n\nfunction dev_2() { \n    let sim = new mods.simulator({mode: \"burst\" } ) \n    let grapher = get_object_grapher({container : document.getElementById(\"wrtsm\") , \n\t\t\t\t      x_len     : 1000 } ) \n    let ln      = new mods.logger_node() \n    let ED      = new mods.event_detector({baseline_buffer_size : 5}) \n    \n    pm.connect(sim,ED).connect(grapher)\n    //pm.connect(sim,grapher)\n    //pm.connect(sim,ln)\n    //pm.connect(sim,ED).connect(ln)\n    sim.start_stream() \n    //return {sim, grapher, ED}\n    \n    \n    //an example of how to graph an event -- \n    //wrtsm.mods.ui.multi_line_graph(\"wrtsm\", { ys : [ ED.events[1545375031336].map(e=>e.y) ] } )\n    \n    return {sim,ED}\n}\n\n\nvar test_data  =  { x : 10 , y : 20 } \n\n\n\n"]}