


export class gait_detector { 
 
    constructor(opts) { 
	self.description = "Detect whether or not subject is walking" 
	self.buffer_length = 200 || opts.buffer_length
	self.buffer = Array(self.buffer_length).fill(NaN)
	self.buffer_started = false 
	self.cycle_number = -1 
	//available states of detector:  
	self.states = {'pre_0' : 0 , 
		       'monotonically_increasing' : 1 , 
		       'monotonically_decreasing_pre_0' : 2, 
		       'monotonically_decreasing_post_0' : 3 } 
	//set state of detector 
	self.state = self.states.pre_0 
    } 
    
    set_state(s) { 
	self.state = s 
    }
    
    // - assumes data represents gyroscope signal 
    process_data(gyr_z) { 
	
	switch (self.state) { 
	case self.states.pre_0 : 
	    //if gz is > 0 and last point was <=0
	    if (gyr_z > 0 && self.buffer[-1] <= 0) {
		self.set_state(self.states.monotonically_increasing)
	    }
	    break ; 
	case self.states.monotonically_increasing : 
	    //
	    
	    break ; 
	case self.states.monotonically_decreasing_pre_0 : 
	    
	    break ; 
	case self.states.monotonically_decreasing_post_0 : 
	    
	    break ; 
	} 
	
	// append to history 

    } 
}
